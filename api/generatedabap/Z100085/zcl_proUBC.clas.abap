CLASS zcl_proUBC DEFINITION PUBLIC.
* Generated by abap-openapi-client
* proUBC Inbound, 1.0.0
  PUBLIC SECTION.
    INTERFACES zif_proUBC.
    METHODS constructor IMPORTING ii_client TYPE REF TO if_http_client.
  PROTECTED SECTION.
    DATA mi_client TYPE REF TO if_http_client.
    DATA mo_json TYPE REF TO zcl_oapi_json.
    METHODS send_receive RETURNING VALUE(rv_code) TYPE i.
    METHODS json_configure_proxy
      IMPORTING data TYPE zif_proUBC=>bodyconfigure_proxy
      RETURNING VALUE(json) TYPE string
      RAISING cx_static_check.
ENDCLASS.

CLASS zcl_proUBC IMPLEMENTATION.
  METHOD constructor.
    mi_client = ii_client.
  ENDMETHOD.

  METHOD send_receive.
    mi_client->send( ).
    mi_client->receive( ).
    mi_client->response->get_status( IMPORTING code = rv_code ).
  ENDMETHOD.

  METHOD json_configure_proxy.
    json = json && '{'.
    json = substring( val = json off = 0 len = strlen( json ) - 1 ).
    json = json && '}'.
  ENDMETHOD.

  METHOD zif_proUBC~organization_proxy_health_chec.
    DATA lv_code TYPE i.
    DATA lv_temp TYPE string.
    DATA lv_uri TYPE string VALUE 'http://{{sap_endpoint}}/proubc/organizations/{id}/proxy'.
    lv_temp = id.
    lv_temp = cl_http_utility=>escape_url( condense( lv_temp ) ).
    REPLACE ALL OCCURRENCES OF '{id}' IN lv_uri WITH lv_temp.
    mi_client->request->set_method( 'GET' ).
    mi_client->request->set_header_field( name = '~request_uri' value = lv_uri ).
    lv_code = send_receive( ).
    WRITE / lv_code.
    CASE lv_code.
      WHEN 200. " Successful response
" application/json,
    ENDCASE.
  ENDMETHOD.

  METHOD zif_proUBC~deleteproxyconfiguration.
    DATA lv_code TYPE i.
    DATA lv_temp TYPE string.
    DATA lv_uri TYPE string VALUE 'http://{{sap_endpoint}}/proubc/organizations/{id}/proxy'.
    lv_temp = id.
    lv_temp = cl_http_utility=>escape_url( condense( lv_temp ) ).
    REPLACE ALL OCCURRENCES OF '{id}' IN lv_uri WITH lv_temp.
    mi_client->request->set_method( 'DELETE' ).
    mi_client->request->set_header_field( name = '~request_uri' value = lv_uri ).
    lv_code = send_receive( ).
    WRITE / lv_code.
    CASE lv_code.
      WHEN 200. " Successful response
" application/json,
    ENDCASE.
  ENDMETHOD.

  METHOD zif_proUBC~health_check.
    DATA lv_code TYPE i.
    DATA lv_temp TYPE string.
    DATA lv_uri TYPE string VALUE 'http://{{sap_endpoint}}/proubc/status'.
    mi_client->request->set_method( 'GET' ).
    mi_client->request->set_header_field( name = '~request_uri' value = lv_uri ).
    lv_code = send_receive( ).
    WRITE / lv_code.
    CASE lv_code.
      WHEN 200. " Successful response
" application/json,
    ENDCASE.
  ENDMETHOD.

  METHOD zif_proUBC~update_object_status.
    DATA lv_code TYPE i.
    DATA lv_temp TYPE string.
    DATA lv_uri TYPE string VALUE 'http://{{sap_endpoint}}/proubc/business_objects/{id}/status'.
    lv_temp = id.
    lv_temp = cl_http_utility=>escape_url( condense( lv_temp ) ).
    REPLACE ALL OCCURRENCES OF '{id}' IN lv_uri WITH lv_temp.
    mi_client->request->set_method( 'PUT' ).
    mi_client->request->set_header_field( name = '~request_uri' value = lv_uri ).
    lv_code = send_receive( ).
    WRITE / lv_code.
    CASE lv_code.
      WHEN 200. " Successful response
" application/json,
    ENDCASE.
  ENDMETHOD.

  METHOD zif_proUBC~get_object_model.
    DATA lv_code TYPE i.
    DATA lv_temp TYPE string.
    DATA lv_uri TYPE string VALUE 'http://{{sap_endpoint}}/proubc/business_object_models/'.
    mi_client->request->set_method( 'GET' ).
    mi_client->request->set_header_field( name = '~request_uri' value = lv_uri ).
    lv_code = send_receive( ).
    WRITE / lv_code.
    CASE lv_code.
      WHEN 200. " Successful response
" application/json,
    ENDCASE.
  ENDMETHOD.

  METHOD zif_proUBC~configure_proxy.
    DATA lv_code TYPE i.
    DATA lv_temp TYPE string.
    DATA lv_uri TYPE string VALUE 'http://{{sap_endpoint}}/proubc/proxies'.
    mi_client->request->set_method( 'POST' ).
    mi_client->request->set_header_field( name = '~request_uri' value = lv_uri ).
    mi_client->request->set_cdata( json_configure_proxy( body ) ).
    lv_code = send_receive( ).
    WRITE / lv_code.
    CASE lv_code.
      WHEN 200. " Successful response
" application/json,
    ENDCASE.
  ENDMETHOD.

  METHOD zif_proUBC~authenticate.
    DATA lv_code TYPE i.
    DATA lv_temp TYPE string.
    DATA lv_uri TYPE string VALUE 'http://{{sap_endpoint}}/proubc/auth'.
    mi_client->request->set_method( 'GET' ).
    mi_client->request->set_header_field( name = '~request_uri' value = lv_uri ).
    mi_client->request->set_header_field( name = 'X-CSRF-Token' value = x_csrf_token ).
    mi_client->request->set_header_field( name = 'Authorization' value = authorization ).
    lv_code = send_receive( ).
    WRITE / lv_code.
    CASE lv_code.
      WHEN 200. " Successful response
" application/json,
    ENDCASE.
  ENDMETHOD.

ENDCLASS.
